import { SvelteComponentTyped } from "svelte";
export interface FaIconDefinition {
    prefix: string;
    iconName: string;
    icon: [
        number,
        number,
        string[],
        string,
        // unicode
        string | string[]
    ];
}
export interface IconPath {
    id?: string;
    d: string;
    style?: string;
    stroke?: string;
}
export interface IconPolygon {
    points: string;
    style?: string;
}
export interface IconData {
    width: number;
    height: number;
    paths?: IconPath[];
    polygons?: IconPolygon[];
    raw?: string;
}
export type IconType = Record<string, IconData> | FaIconDefinition;
declare const __propDef: {
    props: {
        [x: string]: any;
        data: IconType;
        scale?: number | undefined;
        spin?: boolean | undefined;
        inverse?: boolean | undefined;
        pulse?: boolean | undefined;
        flip?: 'horizontal' | 'vertical' | undefined;
        label?: string | undefined;
        style?: string | undefined;
        class?: string | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export type IconProps = typeof __propDef.props;
export type IconEvents = typeof __propDef.events;
export type IconSlots = typeof __propDef.slots;
export default class Icon extends SvelteComponentTyped<IconProps, IconEvents, IconSlots> {
}
export {};
