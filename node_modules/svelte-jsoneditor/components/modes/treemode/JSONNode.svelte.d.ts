import { SvelteComponentTyped } from "svelte";
import ValidationError from './ValidationError.svelte';
import type { JSONData, Path, SearchResultItem, TreeModeContext } from '../../../types';
declare const __propDef: {
    props: {
        value: JSONData;
        path: Path;
        state: JSONData;
        selection: Selection | undefined;
        searchResult: SearchResultItem[];
        validationErrors: ValidationError[];
        context: TreeModeContext;
        onDragSelectionStart: any;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        identifier: {};
    };
};
export declare type JsonNodeProps = typeof __propDef.props;
export declare type JsonNodeEvents = typeof __propDef.events;
export declare type JsonNodeSlots = typeof __propDef.slots;
export default class JsonNode extends SvelteComponentTyped<JsonNodeProps, JsonNodeEvents, JsonNodeSlots> {
}
export {};
