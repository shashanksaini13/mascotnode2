{"version":3,"sources":["../../src/revertJSONPatch.js"],"names":["existsIn","getIn","immutableJSONPatch","isArrayItem","compileJSONPointer","startsWith","revertJSONPatch","json","operations","revertOperations","before","operation","revertOp","REVERT_OPS","op","concat","add","revertAdd","remove","revertRemove","replace","revertReplace","copy","revertCopy","move","revertMove","path","value","from","length","revert"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,0BAAhC;AACA,SAASC,kBAAT,EAA6BC,WAA7B,QAAgD,yBAAhD;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAA0BC,IAA1B,EAAgCC,UAAhC,EAA4C;AACjD,MAAIC,gBAAgB,GAAG,EAAvB;AAEAP,EAAAA,kBAAkB,CAACK,IAAD,EAAOC,UAAP,EAAmB;AACnCE,IAAAA,MAAM,EAAE,gBAACH,IAAD,EAAOI,SAAP,EAAqB;AAC3B,UAAMC,QAAQ,GAAGC,UAAU,CAACF,SAAS,CAACG,EAAX,CAA3B;;AACA,UAAIF,QAAJ,EAAc;AACZH,QAAAA,gBAAgB,GAAGG,QAAQ,CAACL,IAAD,EAAOI,SAAP,CAAR,CAA0BI,MAA1B,CAAiCN,gBAAjC,CAAnB;AACD;AACF;AANkC,GAAnB,CAAlB;AASA,SAAOA,gBAAP;AACD;AAED,IAAMI,UAAU,GAAG;AACjBG,EAAAA,GAAG,EAAEC,SADY;AAEjBC,EAAAA,MAAM,EAAEC,YAFS;AAGjBC,EAAAA,OAAO,EAAEC,aAHQ;AAIjBC,EAAAA,IAAI,EAAEC,UAJW;AAKjBC,EAAAA,IAAI,EAAEC;AALW,CAAnB;AAQA;AACA;AACA;AACA;AACA;;AACA,SAASJ,aAAT,CAAwBd,IAAxB,QAAwC;AAAA,MAARmB,IAAQ,QAARA,IAAQ;AACtC,SAAO,CAAC;AACNZ,IAAAA,EAAE,EAAE,SADE;AAENY,IAAAA,IAAI,EAAEtB,kBAAkB,CAACsB,IAAD,CAFlB;AAGNC,IAAAA,KAAK,EAAE1B,KAAK,CAACM,IAAD,EAAOmB,IAAP;AAHN,GAAD,CAAP;AAKD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASP,YAAT,CAAuBZ,IAAvB,SAAuC;AAAA,MAARmB,IAAQ,SAARA,IAAQ;AACrC,SAAO,CAAC;AACNZ,IAAAA,EAAE,EAAE,KADE;AAENY,IAAAA,IAAI,EAAEtB,kBAAkB,CAACsB,IAAD,CAFlB;AAGNC,IAAAA,KAAK,EAAE1B,KAAK,CAACM,IAAD,EAAOmB,IAAP;AAHN,GAAD,CAAP;AAKD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAAST,SAAT,CAAoBV,IAApB,SAA2C;AAAA,MAAfmB,IAAe,SAAfA,IAAe;AAAA,MAATC,KAAS,SAATA,KAAS;;AACzC,MAAIxB,WAAW,CAACI,IAAD,EAAOmB,IAAP,CAAX,IAA2B,CAAC1B,QAAQ,CAACO,IAAD,EAAOmB,IAAP,CAAxC,EAAsD;AACpD,WAAO,CAAC;AACNZ,MAAAA,EAAE,EAAE,QADE;AAENY,MAAAA,IAAI,EAAEtB,kBAAkB,CAACsB,IAAD;AAFlB,KAAD,CAAP;AAID,GALD,MAKO;AACL,WAAOL,aAAa,CAACd,IAAD,EAAO;AAAEmB,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,KAAK,EAALA;AAAR,KAAP,CAApB;AACD;AACF;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASJ,UAAT,CAAqBhB,IAArB,SAA4C;AAAA,MAAfmB,IAAe,SAAfA,IAAe;AAAA,MAATC,KAAS,SAATA,KAAS;AAC1C,SAAOV,SAAS,CAACV,IAAD,EAAO;AAAEmB,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,KAAK,EAALA;AAAR,GAAP,CAAhB;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASF,UAAT,CAAqBlB,IAArB,SAA2C;AAAA,MAAdmB,IAAc,SAAdA,IAAc;AAAA,MAARE,IAAQ,SAARA,IAAQ;;AACzC,MAAIF,IAAI,CAACG,MAAL,GAAcD,IAAI,CAACC,MAAnB,IAA6BxB,UAAU,CAACuB,IAAD,EAAOF,IAAP,CAA3C,EAAyD;AACvD;AACA,WAAO,CACL;AACEZ,MAAAA,EAAE,EAAE,SADN;AAEEY,MAAAA,IAAI,EAAEtB,kBAAkB,CAACsB,IAAD,CAF1B;AAGEC,MAAAA,KAAK,EAAEpB;AAHT,KADK,CAAP;AAOD;;AAED,MAAIuB,MAAM,GAAG,CACX;AACEhB,IAAAA,EAAE,EAAE,MADN;AAEEc,IAAAA,IAAI,EAAExB,kBAAkB,CAACsB,IAAD,CAF1B;AAGEA,IAAAA,IAAI,EAAEtB,kBAAkB,CAACwB,IAAD;AAH1B,GADW,CAAb;;AAQA,MAAI,CAACzB,WAAW,CAACI,IAAD,EAAOmB,IAAP,CAAZ,IAA4B1B,QAAQ,CAACO,IAAD,EAAOmB,IAAP,CAAxC,EAAsD;AACpD;AACAI,IAAAA,MAAM,GAAGA,MAAM,CAACf,MAAP,CAAcI,YAAY,CAACZ,IAAD,EAAO;AAAEmB,MAAAA,IAAI,EAAJA;AAAF,KAAP,CAA1B,CAAT;AACD;;AAED,SAAOI,MAAP;AACD","sourcesContent":["import { existsIn, getIn } from './immutabilityHelpers.js'\r\nimport { immutableJSONPatch, isArrayItem } from './immutableJSONPatch.js'\r\nimport { compileJSONPointer } from './jsonPointer.js'\r\nimport { startsWith } from './utils.js'\r\n\r\n/**\r\n * Create the inverse of a set of json patch operations\r\n * @param {JSONData} json\r\n * @param {JSONPatchDocument} operations    Array with JSON patch actions\r\n * @return {JSONPatchDocument} Returns the operations to revert the changes\r\n */\r\nexport function revertJSONPatch (json, operations) {\r\n  let revertOperations = []\r\n\r\n  immutableJSONPatch(json, operations, {\r\n    before: (json, operation) => {\r\n      const revertOp = REVERT_OPS[operation.op]\r\n      if (revertOp) {\r\n        revertOperations = revertOp(json, operation).concat(revertOperations)\r\n      }\r\n    }\r\n  })\r\n\r\n  return revertOperations\r\n}\r\n\r\nconst REVERT_OPS = {\r\n  add: revertAdd,\r\n  remove: revertRemove,\r\n  replace: revertReplace,\r\n  copy: revertCopy,\r\n  move: revertMove\r\n}\r\n\r\n/**\r\n * @param {JSONData} json\r\n * @param {{ path: JSONPath }} operation\r\n * @return {JSONPatchDocument}\r\n */\r\nfunction revertReplace (json, { path }) {\r\n  return [{\r\n    op: 'replace',\r\n    path: compileJSONPointer(path),\r\n    value: getIn(json, path)\r\n  }]\r\n}\r\n\r\n/**\r\n * @param {JSONData} json\r\n * @param {{ path: JSONPath }} operation\r\n * @return {JSONPatchDocument}\r\n */\r\nfunction revertRemove (json, { path }) {\r\n  return [{\r\n    op: 'add',\r\n    path: compileJSONPointer(path),\r\n    value: getIn(json, path)\r\n  }]\r\n}\r\n\r\n/**\r\n * @param {JSONData} json\r\n * @param {{ path: JSONPath, value: JSONData }} operation\r\n * @return {JSONPatchDocument}\r\n */\r\nfunction revertAdd (json, { path, value }) {\r\n  if (isArrayItem(json, path) || !existsIn(json, path)) {\r\n    return [{\r\n      op: 'remove',\r\n      path: compileJSONPointer(path)\r\n    }]\r\n  } else {\r\n    return revertReplace(json, { path, value })\r\n  }\r\n}\r\n\r\n/**\r\n * @param {JSONData} json\r\n * @param {{ path: JSONPath, value: JSONData }} operation\r\n * @return {JSONPatchDocument}\r\n */\r\nfunction revertCopy (json, { path, value }) {\r\n  return revertAdd(json, { path, value })\r\n}\r\n\r\n/**\r\n * @param {JSONData} json\r\n * @param {{ path: JSONPath, from: JSONPath }} operation\r\n * @return {JSONPatchDocument}\r\n */\r\nfunction revertMove (json, { path, from }) {\n  if (path.length < from.length && startsWith(from, path)) {\r\n    // replacing the parent with the child\r\n    return [\r\n      {\r\n        op: 'replace',\r\n        path: compileJSONPointer(path),\r\n        value: json\r\n      }\r\n    ]\r\n  }\r\n\r\n  let revert = [\r\n    {\r\n      op: 'move',\r\n      from: compileJSONPointer(path),\r\n      path: compileJSONPointer(from)\r\n    }\r\n  ]\r\n\r\n  if (!isArrayItem(json, path) && existsIn(json, path)) {\r\n    // the move replaces an existing value in an object\r\n    revert = revert.concat(revertRemove(json, { path }))\r\n  }\r\n\r\n  return revert\r\n}\r\n"],"file":"revertJSONPatch.js"}