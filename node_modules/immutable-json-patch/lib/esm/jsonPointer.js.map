{"version":3,"sources":["../../src/jsonPointer.js"],"names":["parseJSONPointer","pointer","path","split","shift","map","p","replace","compileJSONPointer","String","join"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,gBAAT,CAA2BC,OAA3B,EAAoC;AACzC,MAAMC,IAAI,GAAGD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAb;AACAD,EAAAA,IAAI,CAACE,KAAL,GAFyC,CAE5B;;AAEb,SAAOF,IAAI,CAACG,GAAL,CAAS,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,OAAF,CAAU,KAAV,EAAiB,GAAjB,EAAsBA,OAAtB,CAA8B,KAA9B,EAAqC,GAArC,CAAJ;AAAA,GAAV,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CAA6BN,IAA7B,EAAmC;AACxC,SAAOA,IAAI,CACRG,GADI,CACA,UAAAC,CAAC;AAAA,WAAI,MAAMG,MAAM,CAACH,CAAD,CAAN,CAAUC,OAAV,CAAkB,IAAlB,EAAwB,IAAxB,EAA8BA,OAA9B,CAAsC,KAAtC,EAA6C,IAA7C,CAAV;AAAA,GADD,EAEJG,IAFI,CAEC,EAFD,CAAP;AAGD","sourcesContent":["/**\n * Parse a JSON Pointer\n * @param {string} pointer\n * @return {JSONPath}\n */\nexport function parseJSONPointer (pointer) {\n  const path = pointer.split('/')\n  path.shift() // remove the first empty entry\n\n  return path.map(p => p.replace(/~1/g, '/').replace(/~0/g, '~'))\n}\n\n/**\n * Compile a JSON Pointer\n * @param {JSONPath} path\n * @return {string}\n */\nexport function compileJSONPointer (path) {\n  return path\n    .map(p => '/' + String(p).replace(/~/g, '~0').replace(/\\//g, '~1'))\n    .join('')\n}\n"],"file":"jsonPointer.js"}