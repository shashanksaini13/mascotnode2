/**
 * Parse a JSON Pointer
 * @param {string} pointer
 * @return {JSONPath}
 */
export function parseJSONPointer(pointer) {
  var path = pointer.split('/');
  path.shift(); // remove the first empty entry

  return path.map(function (p) {
    return p.replace(/~1/g, '/').replace(/~0/g, '~');
  });
}
/**
 * Compile a JSON Pointer
 * @param {JSONPath} path
 * @return {string}
 */

export function compileJSONPointer(path) {
  return path.map(function (p) {
    return '/' + String(p).replace(/~/g, '~0').replace(/\//g, '~1');
  }).join('');
}
//# sourceMappingURL=jsonPointer.js.map